type Author {
  gravatarURL: String
  name: String
  username: String
}

type Build {
  buildId: String
  cacheId: String
  buildLog: String
  status: String
}

type Commit {
  title: String
}

type Dependency {
  name: String,
  version: String
}

type Project {
  name: String
}

type Release {
  authors: [Author],
  appName: String,
  commits: [Commit],
  commitsTotal: Int,
  cacheId: String,
  date: String,
  dependencies: [Dependency],
  environment: String,
  type: String,
  version: String,
  versionFrom: String
}

type ReleaseNote {
  appName: String
  author: Author
  date: String
  description: String
  cacheId: String
  title: String
  url: String
  version: String
}

type Statistic {
  stableLastHour: Int,
  stableLast3Hours: Int,
  stableLast7Days: Int,
  stableLast30Days: Int,
  preReleaseLastHour: Int,
  preReleaseLast3Hours: Int,
  preReleaseLast7Days: Int,
  preReleaseLast30Days: Int
}

type Mutation {
  saveBuildResults(appId: String,  commitId: String, buildId: String, build: String, log: String status: String): String
}

type Query {
  buildResults(appId: String, commitId: String, buildId: String): Build
  buildResultsFromCommit(appId: String, commitId: String): [Build]
  projects: [Project]
  releaseDetails(appName: String, cacheId: String): Release
  releases(appName: String = "", page: Int = 1, endDate: String = ""): [Release] @cacheControl(scope: PRIVATE)
  releasesNotes(page: Int = 1): [ReleaseNote]
  statistic(appName: String = ""): Statistic
}